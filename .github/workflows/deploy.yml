name: Deploy to Cloudflare

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggers

jobs:
  # Deploy to staging/production
  deploy:
    name: Deploy to Cloudflare Workers
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://finance-agent.aryaninus.workers.dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy

      - name: Deployment success notification
        if: success()
        run: |
          echo "üöÄ Deployment successful!"
          echo "Your app is live at: https://finance-agent.aryaninus.workers.dev"

      - name: Deployment failure notification
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs above for errors"
          exit 1

  # Post-deployment health check
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: success()

    steps:
      - name: Wait for deployment to propagate
        run: sleep 10

      - name: Check if app is responding
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://finance-agent.aryaninus.workers.dev)
          if [ $response -eq 200 ]; then
            echo "‚úì Health check passed (HTTP $response)"
          else
            echo "‚úó Health check failed (HTTP $response)"
            exit 1
          fi

      - name: Test API endpoint
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://finance-agent.aryaninus.workers.dev/api/get-summary)
          if [ $response -eq 200 ]; then
            echo "‚úì API health check passed"
          else
            echo "‚ö†Ô∏è  API returned HTTP $response"
          fi
        continue-on-error: true
